# Python project makefile For SLiC based DFE projects

# ---- Common Configuration Defaults ----

NUMDEVICES ?= 1

# ---- Paths ----
ifndef $(MAXCOMPILER_BUILD_DIR)
	MAXCOMPILER_BUILD_DIR=.
endif
SIMMAXDIR=$(MAXCOMPILER_BUILD_DIR)/$(PRJ)_$(DFEModel)_DFE_SIM/results
DFEMAXDIR=$(MAXCOMPILER_BUILD_DIR)/$(PRJ)_$(DFEModel)_DFE/results
MAXELEROSDIR_SIM:=$(MAXCOMPILERDIR)/lib/maxeleros-sim

# ---- Source files ----
ENGINEFILES=$(wildcard ../src/*.maxj)
CPUFILES=$(wildcard ../src/*.py)

# ---- Command alias ----


MAXFILECOMPILE=maxfilecompile
SLICCOMPILE=sliccompile
MAXGUESSBUILDDIR=maxGuessBuildDir
MAXFILESTITCH=maxfilestitch
MAXJAVARUN=maxJavaRun
MAXJC=maxjc
MAXDEBUG=maxdebug
MAXRENDERGRAPHS=maxRenderGraphs
MAXCOMPILERSIM=maxcompilersim

MAXOS_HW=/opt/maxeler/maxeleros/lib/libmaxeleros.so
MAXOS_SIM=$(MAXELEROSDIR_SIM)/lib/libmaxeleros.so

JFLAGS=-cp $(MAXCOMPILERDIR)/lib/MaxCompiler.jar -1.6 -d .

# ---- Default DFE ----
DFEID=/dev/maxeler0

# Files to remove on clean
TRASH=*.py *.pyc *.so
DIST_TRASH=Maxfiles.h *.class *.o debug* *.dot *.png

help:
	@ echo "Current configuration:"
	@ echo "   Compiler       $(CC)"
	@ echo "   MAXCOMPILERDIR $(MAXCOMPILERDIR)"
	@ echo ""
	@ echo "Available targets: "
	@ echo "   runsim   -- build and run design in simulation (requires MaxCompiler license)"
	@ echo "   build    -- build the design in hardware (requires MaxCompiler license)"
	@ echo "   run      -- run design in hardware (requires local access to a DFE)"
	@ echo "   debug    -- debug a simulation design using MaxDebug"
	@ echo "   debughw  -- debug a hardware design using MaxDebug (requires local access to DFE)"
	@ echo "   cleansim, cleandfe, clean -- clean executables for simulation, hardware or both"
	@ echo "   distcleansim, distcleanhw, distclean -- delete the entire sim, hw or both directories"
	@ echo "   help     -- print this help message"


all: runsim build

.PHONY: stopsim run cleansim cleandfe debug debughw

# ---- Simulation ----

$(SIMMAXDIR)/$(PRJ).max: $(ENGINEFILES)
	$(MAXJC) $(JFLAGS) $(ENGINEFILES)
	MAXAPPJCP=. MAXSOURCEDIRS='../src' $(MAXJAVARUN) -v -m 8192 $(MANAGER) DFEModel=$(DFEModel) maxFileName=$(PRJ) target='DFE_SIM' enableMPCX=$(MPCX)
	cp $(SIMMAXDIR)/$(PRJ).h $(SIMMAXDIR)/Maxfiles.h

_$(PRJ).o: $(SIMMAXDIR)/$(PRJ).max
	$(SLICCOMPILE) -t python -m $<

runsim: _$(PRJ).o
	cp $(CPUFILES) .
	python $(PRJ)CpuCode.py


# ---- DFE ----

$(DFEMAXDIR)/$(PRJ).max: $(ENGINEFILES)
	$(MAXJC) $(JFLAGS) $(ENGINEFILES)
	MAXAPPJCP=. MAXSOURCEDIRS='../src' $(MAXJAVARUN) -v -m 8192 $(MANAGER) DFEModel=$(DFEModel) maxFileName=$(PRJ) target='DFE' enableMPCX=$(MPCX)
	cp $(DFEMAXDIR)/$(PRJ).h $(DFEMAXDIR)/Maxfiles.h

_$(PRJ)_hw.o: $(DFEMAXDIR)/$(PRJ).max
	$(SLICCOMPILE) -t python -m $<

build: _$(PRJ)_hw.o

run:
	cp $(CPUFILES) .
	SLIC_CONF=$(SLIC_CONF) LD_PRELOAD=$(MAXOS_HW) python $(PRJ)CpuCode.py

# ---- Clean ----

cleansim:
	rm -f $(PRJ)_sim $(TRASH)

cleandfe:
	rm -f $(PRJ)_dfe $(TRASH)

clean: cleansim cleandfe

distcleansim: cleansim
	rm -rf $(DIST_TRASH) $(PRJ)_$(DFEModel)_DFE_SIM

distcleandfe: cleandfe
	rm -rf $(DIST_TRASH) $(PRJ)_$(DFEModel)_DFE

distclean: distcleansim distcleandfe

# ---- Debug ----

debug:
	maxdebug -v -g $(PRJ)Graph -s $(PRJ)Graph -c -k $(KERNEL) -d $(USER)a0:$(USER)a $(SIMMAXDIR)/$(PRJ).max

debughw:
	maxdebug -v -g $(PRJ)Graph -s $(PRJ)Graph -c -k $(KERNEL) -d $(DFEID) $(DFEMAXDIR)/$(PRJ).max
