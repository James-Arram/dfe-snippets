/***
    A simple benchmark of the Maxeler Accumulator API.
*/

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator;
import com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Reductions;
import static com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.Accumulator.*;

class AccumulatorKernel extends Kernel {

    protected AccumulatorKernel(KernelParameters parameters) {
        super(parameters);


        //        DFEVar b = io.input("b", dfeFixed(32));
        //      DFEVar b = io.input("b", dfeFloat(8, 24));


        /***
            Create an accumulator for the integer stream 'int_in' and
            output its value every cycle.
        */
        DFEVar a = io.input("int_in", dfeInt(32));
        Accumulator acc = Reductions.accumulator;
        Params paramsInt = acc.makeAccumulatorConfig(dfeInt(32));
        DFEVar accumulatorInt = acc.makeAccumulator(a, paramsInt);
        io.output("int_out", accumulatorInt, dfeInt(32));
    }

}
